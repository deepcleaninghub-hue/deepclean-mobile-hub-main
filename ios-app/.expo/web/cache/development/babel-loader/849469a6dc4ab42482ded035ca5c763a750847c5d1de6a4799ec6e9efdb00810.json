{"ast":null,"code":"import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport HomeScreen from \"../screens/HomeScreen\";\nimport ServicesScreen from \"../screens/ServicesScreen\";\nimport ContactScreen from \"../screens/ContactScreen\";\nimport AboutScreen from \"../screens/AboutScreen\";\nimport { theme } from \"../utils/theme\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar AppNavigator = function AppNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Services') {\n            iconName = focused ? 'briefcase' : 'briefcase-outline';\n          } else if (route.name === 'Contact') {\n            iconName = focused ? 'call' : 'call-outline';\n          } else if (route.name === 'About') {\n            iconName = focused ? 'person' : 'person-outline';\n          } else {\n            iconName = 'help-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: theme.colors.onSurfaceVariant,\n        tabBarStyle: {\n          backgroundColor: theme.colors.surface,\n          borderTopColor: theme.colors.outline,\n          paddingBottom: 5,\n          paddingTop: 5,\n          height: 60\n        },\n        headerStyle: {\n          backgroundColor: theme.colors.surface\n        },\n        headerTintColor: theme.colors.onSurface,\n        headerTitleStyle: {\n          fontWeight: '600'\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        title: 'Deep Clean Hub'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Services\",\n      component: ServicesScreen,\n      options: {\n        title: 'Our Services'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Contact\",\n      component: ContactScreen,\n      options: {\n        title: 'Contact Us'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"About\",\n      component: AboutScreen,\n      options: {\n        title: 'About Us'\n      }\n    })]\n  });\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","createBottomTabNavigator","Ionicons","HomeScreen","ServicesScreen","ContactScreen","AboutScreen","theme","jsx","_jsx","jsxs","_jsxs","Tab","AppNavigator","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","colors","primary","tabBarInactiveTintColor","onSurfaceVariant","tabBarStyle","backgroundColor","surface","borderTopColor","outline","paddingBottom","paddingTop","height","headerStyle","headerTintColor","onSurface","headerTitleStyle","fontWeight","children","Screen","component","options","title"],"sources":["/Users/Mayank/Downloads/deepclean-mobile-hub-main/ios-app/navigation/AppNavigator.tsx"],"sourcesContent":["import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport HomeScreen from '../screens/HomeScreen';\nimport ServicesScreen from '../screens/ServicesScreen';\nimport ContactScreen from '../screens/ContactScreen';\nimport AboutScreen from '../screens/AboutScreen';\nimport { theme } from '../utils/theme';\n\nconst Tab = createBottomTabNavigator();\n\nconst AppNavigator = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName: keyof typeof Ionicons.glyphMap;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Services') {\n            iconName = focused ? 'briefcase' : 'briefcase-outline';\n          } else if (route.name === 'Contact') {\n            iconName = focused ? 'call' : 'call-outline';\n          } else if (route.name === 'About') {\n            iconName = focused ? 'person' : 'person-outline';\n          } else {\n            iconName = 'help-outline';\n          }\n\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: theme.colors.onSurfaceVariant,\n        tabBarStyle: {\n          backgroundColor: theme.colors.surface,\n          borderTopColor: theme.colors.outline,\n          paddingBottom: 5,\n          paddingTop: 5,\n          height: 60,\n        },\n        headerStyle: {\n          backgroundColor: theme.colors.surface,\n        },\n        headerTintColor: theme.colors.onSurface,\n        headerTitleStyle: {\n          fontWeight: '600',\n        },\n      })}\n    >\n      <Tab.Screen \n        name=\"Home\" \n        component={HomeScreen} \n        options={{ title: 'Deep Clean Hub' }}\n      />\n      <Tab.Screen \n        name=\"Services\" \n        component={ServicesScreen} \n        options={{ title: 'Our Services' }}\n      />\n      <Tab.Screen \n        name=\"Contact\" \n        component={ContactScreen} \n        options={{ title: 'Contact Us' }}\n      />\n      <Tab.Screen \n        name=\"About\" \n        component={AboutScreen} \n        options={{ title: 'About Us' }}\n      />\n    </Tab.Navigator>\n  );\n};\n\nexport default AppNavigator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}