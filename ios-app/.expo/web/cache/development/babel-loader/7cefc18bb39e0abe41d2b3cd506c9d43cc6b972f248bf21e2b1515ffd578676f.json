{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Text, Card, Button, useTheme } from 'react-native-paper';\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ServiceCard = function ServiceCard(_ref) {\n  var id = _ref.id,\n    title = _ref.title,\n    description = _ref.description,\n    image = _ref.image;\n  var theme = useTheme();\n  var handleViewService = function handleViewService() {\n    Alert.alert('Service Details', `Viewing details for ${title}`);\n  };\n  return _jsx(Card, {\n    style: [styles.card, {\n      backgroundColor: theme.colors.surface\n    }],\n    children: _jsxs(TouchableOpacity, {\n      onPress: handleViewService,\n      activeOpacity: 0.9,\n      children: [_jsx(View, {\n        style: styles.imageContainer,\n        children: _jsx(Image, {\n          source: {\n            uri: image\n          },\n          style: styles.image,\n          resizeMode: \"cover\"\n        })\n      }), _jsxs(Card.Content, {\n        style: styles.content,\n        children: [_jsx(Text, {\n          variant: \"titleMedium\",\n          style: [styles.title, {\n            color: theme.colors.onSurface\n          }],\n          children: title\n        }), _jsx(Text, {\n          variant: \"bodyMedium\",\n          style: [styles.description, {\n            color: theme.colors.onSurfaceVariant\n          }],\n          children: description\n        }), _jsx(Button, {\n          mode: \"outlined\",\n          onPress: handleViewService,\n          style: styles.button,\n          contentStyle: styles.buttonContent,\n          icon: function icon(_ref2) {\n            var size = _ref2.size,\n              color = _ref2.color;\n            return _jsx(Ionicons, {\n              name: \"arrow-forward\",\n              size: size,\n              color: color\n            });\n          },\n          children: \"View Service\"\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  card: {\n    marginBottom: 16,\n    borderRadius: 12,\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3.84\n  },\n  imageContainer: {\n    height: 200,\n    overflow: 'hidden',\n    borderTopLeftRadius: 12,\n    borderTopRightRadius: 12\n  },\n  image: {\n    width: '100%',\n    height: '100%'\n  },\n  content: {\n    padding: 16\n  },\n  title: {\n    fontWeight: '600',\n    marginBottom: 8,\n    lineHeight: 24\n  },\n  description: {\n    marginBottom: 16,\n    lineHeight: 20\n  },\n  button: {\n    borderRadius: 8\n  },\n  buttonContent: {\n    paddingVertical: 4\n  }\n});\nexport default ServiceCard;","map":{"version":3,"names":["React","View","StyleSheet","Image","TouchableOpacity","Alert","Text","Card","Button","useTheme","Ionicons","jsx","_jsx","jsxs","_jsxs","ServiceCard","_ref","id","title","description","image","theme","handleViewService","alert","style","styles","card","backgroundColor","colors","surface","children","onPress","activeOpacity","imageContainer","source","uri","resizeMode","Content","content","variant","color","onSurface","onSurfaceVariant","mode","button","contentStyle","buttonContent","icon","_ref2","size","name","create","marginBottom","borderRadius","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","overflow","borderTopLeftRadius","borderTopRightRadius","padding","fontWeight","lineHeight","paddingVertical"],"sources":["/Users/Mayank/Downloads/deepclean-mobile-hub-main/ios-app/components/ServiceCard.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  View,\n  StyleSheet,\n  Image,\n  TouchableOpacity,\n  Alert,\n} from 'react-native';\nimport { Text, Card, Button, useTheme } from 'react-native-paper';\nimport { Ionicons } from '@expo/vector-icons';\n\ninterface ServiceCardProps {\n  id: string;\n  title: string;\n  description: string;\n  image: string;\n}\n\nconst ServiceCard: React.FC<ServiceCardProps> = ({ id, title, description, image }) => {\n  const theme = useTheme();\n\n  const handleViewService = () => {\n    Alert.alert('Service Details', `Viewing details for ${title}`);\n    // Here you would typically navigate to a service detail screen\n  };\n\n  return (\n    <Card style={[styles.card, { backgroundColor: theme.colors.surface }]}>\n      <TouchableOpacity onPress={handleViewService} activeOpacity={0.9}>\n        <View style={styles.imageContainer}>\n          <Image\n            source={{ uri: image }}\n            style={styles.image}\n            resizeMode=\"cover\"\n          />\n        </View>\n        <Card.Content style={styles.content}>\n          <Text variant=\"titleMedium\" style={[styles.title, { color: theme.colors.onSurface }]}>\n            {title}\n          </Text>\n          <Text variant=\"bodyMedium\" style={[styles.description, { color: theme.colors.onSurfaceVariant }]}>\n            {description}\n          </Text>\n          <Button\n            mode=\"outlined\"\n            onPress={handleViewService}\n            style={styles.button}\n            contentStyle={styles.buttonContent}\n            icon={({ size, color }) => (\n              <Ionicons name=\"arrow-forward\" size={size} color={color} />\n            )}\n          >\n            View Service\n          </Button>\n        </Card.Content>\n      </TouchableOpacity>\n    </Card>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    marginBottom: 16,\n    borderRadius: 12,\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3.84,\n  },\n  imageContainer: {\n    height: 200,\n    overflow: 'hidden',\n    borderTopLeftRadius: 12,\n    borderTopRightRadius: 12,\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n  },\n  content: {\n    padding: 16,\n  },\n  title: {\n    fontWeight: '600',\n    marginBottom: 8,\n    lineHeight: 24,\n  },\n  description: {\n    marginBottom: 16,\n    lineHeight: 20,\n  },\n  button: {\n    borderRadius: 8,\n  },\n  buttonContent: {\n    paddingVertical: 4,\n  },\n});\n\nexport default ServiceCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}